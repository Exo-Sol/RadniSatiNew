[{"C:\\Users\\Exo\\Desktop\\Ongoing project\\radni-sati\\src\\index.js":"1","C:\\Users\\Exo\\Desktop\\Ongoing project\\radni-sati\\src\\App.js":"2","C:\\Users\\Exo\\Desktop\\Ongoing project\\radni-sati\\src\\components\\DateNav.js":"3","C:\\Users\\Exo\\Desktop\\Ongoing project\\radni-sati\\src\\components\\HList.js":"4","C:\\Users\\Exo\\Desktop\\Ongoing project\\radni-sati\\src\\components\\PopUp.js":"5","C:\\Users\\Exo\\Desktop\\Ongoing project\\radni-sati\\src\\components\\addRenameJob\\NameJob.js":"6"},{"size":198,"mtime":1611139871704,"results":"7","hashOfConfig":"8"},{"size":4338,"mtime":1612022068722,"results":"9","hashOfConfig":"8"},{"size":5001,"mtime":1611686288241,"results":"10","hashOfConfig":"8"},{"size":2554,"mtime":1612022410780,"results":"11","hashOfConfig":"8"},{"size":311,"mtime":1611686263627,"results":"12","hashOfConfig":"8"},{"size":815,"mtime":1611830727444,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"lqlpn9",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\Exo\\Desktop\\Ongoing project\\radni-sati\\src\\index.js",[],["28","29"],"C:\\Users\\Exo\\Desktop\\Ongoing project\\radni-sati\\src\\App.js",["30","31"],"C:\\Users\\Exo\\Desktop\\Ongoing project\\radni-sati\\src\\components\\DateNav.js",["32","33"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport HList from \"../components/HList\";\r\n\r\nimport \"../styles/mainStyle.css\";\r\n\r\nimport PopUp from \"./PopUp\";\r\n\r\nconst DateNav = ({ catchData }) => {\r\n  const [clickCount, setClickCount] = useState(0);\r\n\r\n  //////////DATE FORMARING//////////////////////////\r\n  //////////////////////////////////////////////////\r\n  const formatDate = (count) => {\r\n    const dateObj = new Date(),\r\n      dayNames = [\"Ned\", \"Pon\", \"Uto\", \"Sri\", \"Cet\", \"Pet\", \"Sub\"];\r\n    if (clickCount !== 0) {\r\n      console.log(\"dohvaceno\");\r\n      dateObj.setDate(new Date().getDate() + count);\r\n    }\r\n\r\n    return {\r\n      year: dateObj.getFullYear(),\r\n      day: dateObj.getDate(),\r\n      month: dateObj.getMonth() + 1,\r\n      dayName: dayNames[dateObj.getDay()],\r\n    };\r\n  };\r\n  //////////////////////////////////////////////////////////////\r\n  //////////////////////////////////////////////////////////////\r\n  const [selectedDay, setSelectedDay] = useState(formatDate());\r\n  ///////////////////////////////////////////////////////////////\r\n  const [workHours, setWorkHours] = useState(0);\r\n  //////////////////////////////////////////////////////////////\r\n  const [selectedTimes, setSelectedTimes] = useState({\r\n    startTime: null,\r\n    endTime: null,\r\n  });\r\n  //////////////////////////////////////////////////////////////\r\n  const [popUpState, setPopUpState] = useState(false);\r\n\r\n  ////////////////////////ANIMATION///////////////////////////////////////\r\n\r\n  ///////////////////////////////////////////////////////////////\r\n\r\n  // settin the displayed date <_> clicking day back or foward is hooked with useEffect to change state\r\n  //witch is date displayed visualy\r\n\r\n  useEffect(() => {\r\n    setSelectedDay(formatDate(clickCount));\r\n  }, [clickCount]);\r\n\r\n  const dayFoward = () => {\r\n    setClickCount((count) => count + 1);\r\n  };\r\n\r\n  const dayBack = () => {\r\n    setClickCount((count) => count - 1);\r\n  };\r\n\r\n  /////////////JSX variables/////////////////////////////////\r\n\r\n  const backArrow = (\r\n    <span className=\"material-icons timeArrow\" onClick={dayBack}>\r\n      arrow_back_ios\r\n    </span>\r\n  );\r\n\r\n  const fwdArrow = (\r\n    <span className=\"material-icons timeArrow\" onClick={dayFoward}>\r\n      arrow_forward_ios\r\n    </span>\r\n  );\r\n  /////////////////////////////////////////////////////////\r\n  const clickHour = (e) => {\r\n    if (!selectedTimes.startTime) {\r\n      setSelectedTimes({ ...selectedTimes, startTime: e.target.textContent });\r\n    } else if (!selectedTimes.endTime) {\r\n      // make unable to select end time lower than start time\r\n      if (parseInt(e.target.textContent) > parseInt(selectedTimes.startTime)) {\r\n        setSelectedTimes({ ...selectedTimes, endTime: e.target.textContent });\r\n      }\r\n    }\r\n  };\r\n\r\n  /////////////////////////////////////////////////////////////////////\r\n  useEffect(() => {\r\n    let derivedWorkHours = selectedTimes.endTime - selectedTimes.startTime;\r\n    setWorkHours(derivedWorkHours);\r\n  }, [selectedTimes.endTime]);\r\n\r\n  ////////////////////////////////////////////////////////////////////\r\n\r\n  const hoursChange = (e) => {\r\n    setWorkHours(e.target.value);\r\n  };\r\n\r\n  //////////////////////////////////\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (workHours > 24 || workHours < 0) {\r\n      alert(\"Netocno uneseni sati\");\r\n    } else if (workHours) {\r\n      catchData(selectedDay, workHours, selectedTimes);\r\n      setWorkHours(0);\r\n      setSelectedTimes({\r\n        startTime: null,\r\n        endTime: null,\r\n      });\r\n      /////////////////////////\r\n      setPopUpState(true);\r\n      setTimeout(() => {\r\n        setPopUpState(false);\r\n      }, 800);\r\n    }\r\n  };\r\n  /////////////////////////////////////////////\r\n  const clickDelete = () => {\r\n    setWorkHours(0);\r\n    setSelectedTimes({\r\n      startTime: null,\r\n      endTime: null,\r\n    });\r\n  };\r\n  ////////////////////////////////////////////////\r\n  return (\r\n    <>\r\n      {popUpState ? <PopUp /> : <div></div>}\r\n\r\n      <div className=\"dateNav\">\r\n        {backArrow}\r\n        {`${selectedDay.dayName}, ${selectedDay.day}/${selectedDay.month}`}\r\n        {fwdArrow}\r\n      </div>\r\n      <div className=\"flexWrapNav\">\r\n        <input\r\n          type=\"number\"\r\n          className=\"inputField\"\r\n          name=\"workHours\"\r\n          placeholder=\"Radni sati\"\r\n          value={workHours}\r\n          onChange={hoursChange}\r\n          style={{ display: \"block\" }}\r\n        />\r\n        <br />\r\n        <div className=\"flexWrapButtons\">\r\n          <input\r\n            type=\"submit\"\r\n            onClick={onSubmit}\r\n            value=\"Save\"\r\n            id=\"save\"\r\n            className=\"buttons\"\r\n          />\r\n\r\n          <button id=\"delete\" onClick={clickDelete} className=\"buttons\">\r\n            Del\r\n          </button>\r\n        </div>\r\n        <div className=\"hourPad\">\r\n          <HList clickHour={clickHour} selectedTimes={selectedTimes} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateNav;\r\n","C:\\Users\\Exo\\Desktop\\Ongoing project\\radni-sati\\src\\components\\HList.js",["34","35","36"],"C:\\Users\\Exo\\Desktop\\Ongoing project\\radni-sati\\src\\components\\PopUp.js",[],"C:\\Users\\Exo\\Desktop\\Ongoing project\\radni-sati\\src\\components\\addRenameJob\\NameJob.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":75,"column":15,"nodeType":"43","messageId":"44","endLine":75,"endColumn":26},{"ruleId":"45","severity":1,"message":"46","line":85,"column":11,"nodeType":"47","messageId":"48","endLine":85,"endColumn":12},{"ruleId":"49","severity":1,"message":"50","line":51,"column":6,"nodeType":"51","endLine":51,"endColumn":18,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"53","line":90,"column":6,"nodeType":"51","endLine":90,"endColumn":29,"suggestions":"54"},{"ruleId":"45","severity":1,"message":"55","line":17,"column":9,"nodeType":"47","messageId":"48","endLine":17,"endColumn":14},{"ruleId":"56","severity":1,"message":"57","line":49,"column":11,"nodeType":"58","messageId":"59","endLine":49,"endColumn":13},{"ruleId":"56","severity":1,"message":"57","line":60,"column":18,"nodeType":"58","messageId":"59","endLine":60,"endColumn":20},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-unused-vars","'x' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formatDate'. Either include it or remove the dependency array.","ArrayExpression",["62"],"React Hook useEffect has a missing dependency: 'selectedTimes.startTime'. Either include it or remove the dependency array.",["63"],"'props' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},"Update the dependencies array to be: [clickCount, formatDate]",{"range":"68","text":"69"},"Update the dependencies array to be: [selectedTimes.endTime, selectedTimes.startTime]",{"range":"70","text":"71"},[1778,1790],"[clickCount, formatDate]",[2996,3019],"[selectedTimes.endTime, selectedTimes.startTime]"]